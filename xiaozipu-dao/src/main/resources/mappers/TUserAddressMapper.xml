<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaozipu.dao.mapper.TUserAddressMapper">
    <resultMap id="BaseResultMap" type="com.xiaozipu.dao.entity.TUserAddress">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="recipient_phone" jdbcType="VARCHAR" property="recipientPhone"/>
        <result column="recipient_name" jdbcType="VARCHAR" property="recipientName"/>
        <result column="province" jdbcType="VARCHAR" property="province"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="district" jdbcType="VARCHAR" property="district"/>
        <result column="address_detail" jdbcType="VARCHAR" property="addressDetail"/>
        <result column="is_default" jdbcType="VARCHAR" property="isDefault"/>
        <result column="deleted" jdbcType="VARCHAR" property="deleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_id, recipient_phone, recipient_name, province, city, district, address_detail, 
    is_default, deleted, create_time, update_time
  </sql>
    <select id="selectByExample" parameterType="com.xiaozipu.dao.entity.TUserAddressExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from t_user_address
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user_address
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.xiaozipu.dao.entity.TUserAddressExample">
        delete from t_user_address
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xiaozipu.dao.entity.TUserAddress">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_user_address (user_id, recipient_phone, recipient_name,
        province, city, district,
        address_detail, is_default, deleted,
        create_time, update_time)
        values (#{userId,jdbcType=INTEGER}, #{recipientPhone,jdbcType=VARCHAR}, #{recipientName,jdbcType=VARCHAR},
        #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR},
        #{addressDetail,jdbcType=VARCHAR}, #{isDefault,jdbcType=VARCHAR}, #{deleted,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.xiaozipu.dao.entity.TUserAddress">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_user_address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="recipientPhone != null">
                recipient_phone,
            </if>
            <if test="recipientName != null">
                recipient_name,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="district != null">
                district,
            </if>
            <if test="addressDetail != null">
                address_detail,
            </if>
            <if test="isDefault != null">
                is_default,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="recipientPhone != null">
                #{recipientPhone,jdbcType=VARCHAR},
            </if>
            <if test="recipientName != null">
                #{recipientName,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="district != null">
                #{district,jdbcType=VARCHAR},
            </if>
            <if test="addressDetail != null">
                #{addressDetail,jdbcType=VARCHAR},
            </if>
            <if test="isDefault != null">
                #{isDefault,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xiaozipu.dao.entity.TUserAddressExample"
            resultType="java.lang.Long">
        select count(*) from t_user_address
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_user_address
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.recipientPhone != null">
                recipient_phone = #{record.recipientPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.recipientName != null">
                recipient_name = #{record.recipientName,jdbcType=VARCHAR},
            </if>
            <if test="record.province != null">
                province = #{record.province,jdbcType=VARCHAR},
            </if>
            <if test="record.city != null">
                city = #{record.city,jdbcType=VARCHAR},
            </if>
            <if test="record.district != null">
                district = #{record.district,jdbcType=VARCHAR},
            </if>
            <if test="record.addressDetail != null">
                address_detail = #{record.addressDetail,jdbcType=VARCHAR},
            </if>
            <if test="record.isDefault != null">
                is_default = #{record.isDefault,jdbcType=VARCHAR},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_user_address
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        recipient_phone = #{record.recipientPhone,jdbcType=VARCHAR},
        recipient_name = #{record.recipientName,jdbcType=VARCHAR},
        province = #{record.province,jdbcType=VARCHAR},
        city = #{record.city,jdbcType=VARCHAR},
        district = #{record.district,jdbcType=VARCHAR},
        address_detail = #{record.addressDetail,jdbcType=VARCHAR},
        is_default = #{record.isDefault,jdbcType=VARCHAR},
        deleted = #{record.deleted,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaozipu.dao.entity.TUserAddress">
        update t_user_address
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="recipientPhone != null">
                recipient_phone = #{recipientPhone,jdbcType=VARCHAR},
            </if>
            <if test="recipientName != null">
                recipient_name = #{recipientName,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="district != null">
                district = #{district,jdbcType=VARCHAR},
            </if>
            <if test="addressDetail != null">
                address_detail = #{addressDetail,jdbcType=VARCHAR},
            </if>
            <if test="isDefault != null">
                is_default = #{isDefault,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaozipu.dao.entity.TUserAddress">
    update t_user_address
    set user_id = #{userId,jdbcType=INTEGER},
      recipient_phone = #{recipientPhone,jdbcType=VARCHAR},
      recipient_name = #{recipientName,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      address_detail = #{addressDetail,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        insert into t_user_address
        (user_id, recipient_phone, recipient_name, province, city, district, address_detail,
        is_default, deleted, create_time, update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.userId,jdbcType=INTEGER}, #{item.recipientPhone,jdbcType=VARCHAR},
            #{item.recipientName,jdbcType=VARCHAR},
            #{item.province,jdbcType=VARCHAR}, #{item.city,jdbcType=VARCHAR}, #{item.district,jdbcType=VARCHAR},
            #{item.addressDetail,jdbcType=VARCHAR}, #{item.isDefault,jdbcType=VARCHAR},
            #{item.deleted,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
        insert into t_user_address (
        <foreach collection="selective" item="column" separator=",">
            ${column.escapedColumnName}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            <foreach collection="selective" item="column" separator=",">
                <if test="'user_id'.toString() == column.value">
                    #{item.userId,jdbcType=INTEGER}
                </if>
                <if test="'recipient_phone'.toString() == column.value">
                    #{item.recipientPhone,jdbcType=VARCHAR}
                </if>
                <if test="'recipient_name'.toString() == column.value">
                    #{item.recipientName,jdbcType=VARCHAR}
                </if>
                <if test="'province'.toString() == column.value">
                    #{item.province,jdbcType=VARCHAR}
                </if>
                <if test="'city'.toString() == column.value">
                    #{item.city,jdbcType=VARCHAR}
                </if>
                <if test="'district'.toString() == column.value">
                    #{item.district,jdbcType=VARCHAR}
                </if>
                <if test="'address_detail'.toString() == column.value">
                    #{item.addressDetail,jdbcType=VARCHAR}
                </if>
                <if test="'is_default'.toString() == column.value">
                    #{item.isDefault,jdbcType=VARCHAR}
                </if>
                <if test="'deleted'.toString() == column.value">
                    #{item.deleted,jdbcType=VARCHAR}
                </if>
                <if test="'create_time'.toString() == column.value">
                    #{item.createTime,jdbcType=TIMESTAMP}
                </if>
                <if test="'update_time'.toString() == column.value">
                    #{item.updateTime,jdbcType=TIMESTAMP}
                </if>
            </foreach>
            )
        </foreach>
    </insert>
</mapper>