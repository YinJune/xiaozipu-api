<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaozipu.dao.mapper.generator.TOrderMapper">
    <resultMap id="BaseResultMap" type="com.xiaozipu.dao.entity.generator.TOrder">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="order_code" jdbcType="VARCHAR" property="orderCode"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="pay_amount" jdbcType="DECIMAL" property="payAmount"/>
        <result column="recipient_name" jdbcType="VARCHAR" property="recipientName"/>
        <result column="recipient_mobile" jdbcType="VARCHAR" property="recipientMobile"/>
        <result column="recipient_address" jdbcType="VARCHAR" property="recipientAddress"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="pay_status" jdbcType="VARCHAR" property="payStatus"/>
        <result column="deleted" jdbcType="VARCHAR" property="deleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, order_code, user_id, amount, pay_amount, recipient_name, recipient_mobile, recipient_address, 
    status, pay_status, deleted, create_time, update_time
  </sql>
    <select id="selectByExample" parameterType="com.xiaozipu.dao.entity.generator.TOrderExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from t_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.xiaozipu.dao.entity.generator.TOrderExample">
        delete from t_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xiaozipu.dao.entity.generator.TOrder">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_order (order_code, user_id, amount,
        pay_amount, recipient_name, recipient_mobile,
        recipient_address, status, pay_status,
        deleted, create_time, update_time
        )
        values (#{orderCode,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL},
        #{payAmount,jdbcType=DECIMAL}, #{recipientName,jdbcType=VARCHAR}, #{recipientMobile,jdbcType=VARCHAR},
        #{recipientAddress,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR},
        #{deleted,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.xiaozipu.dao.entity.generator.TOrder">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderCode != null">
                order_code,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="payAmount != null">
                pay_amount,
            </if>
            <if test="recipientName != null">
                recipient_name,
            </if>
            <if test="recipientMobile != null">
                recipient_mobile,
            </if>
            <if test="recipientAddress != null">
                recipient_address,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderCode != null">
                #{orderCode,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="payAmount != null">
                #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="recipientName != null">
                #{recipientName,jdbcType=VARCHAR},
            </if>
            <if test="recipientMobile != null">
                #{recipientMobile,jdbcType=VARCHAR},
            </if>
            <if test="recipientAddress != null">
                #{recipientAddress,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xiaozipu.dao.entity.generator.TOrderExample"
            resultType="java.lang.Long">
        select count(*) from t_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_order
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.orderCode != null">
                order_code = #{record.orderCode,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=DECIMAL},
            </if>
            <if test="record.payAmount != null">
                pay_amount = #{record.payAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.recipientName != null">
                recipient_name = #{record.recipientName,jdbcType=VARCHAR},
            </if>
            <if test="record.recipientMobile != null">
                recipient_mobile = #{record.recipientMobile,jdbcType=VARCHAR},
            </if>
            <if test="record.recipientAddress != null">
                recipient_address = #{record.recipientAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.payStatus != null">
                pay_status = #{record.payStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_order
        set id = #{record.id,jdbcType=INTEGER},
        order_code = #{record.orderCode,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=INTEGER},
        amount = #{record.amount,jdbcType=DECIMAL},
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
        recipient_name = #{record.recipientName,jdbcType=VARCHAR},
        recipient_mobile = #{record.recipientMobile,jdbcType=VARCHAR},
        recipient_address = #{record.recipientAddress,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        pay_status = #{record.payStatus,jdbcType=VARCHAR},
        deleted = #{record.deleted,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaozipu.dao.entity.generator.TOrder">
        update t_order
        <set>
            <if test="orderCode != null">
                order_code = #{orderCode,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="payAmount != null">
                pay_amount = #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="recipientName != null">
                recipient_name = #{recipientName,jdbcType=VARCHAR},
            </if>
            <if test="recipientMobile != null">
                recipient_mobile = #{recipientMobile,jdbcType=VARCHAR},
            </if>
            <if test="recipientAddress != null">
                recipient_address = #{recipientAddress,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaozipu.dao.entity.generator.TOrder">
    update t_order
    set order_code = #{orderCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      recipient_name = #{recipientName,jdbcType=VARCHAR},
      recipient_mobile = #{recipientMobile,jdbcType=VARCHAR},
      recipient_address = #{recipientAddress,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        insert into t_order
        (order_code, user_id, amount, pay_amount, recipient_name, recipient_mobile, recipient_address,
        status, pay_status, deleted, create_time, update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.orderCode,jdbcType=VARCHAR}, #{item.userId,jdbcType=INTEGER}, #{item.amount,jdbcType=DECIMAL},
            #{item.payAmount,jdbcType=DECIMAL}, #{item.recipientName,jdbcType=VARCHAR},
            #{item.recipientMobile,jdbcType=VARCHAR},
            #{item.recipientAddress,jdbcType=VARCHAR}, #{item.status,jdbcType=VARCHAR},
            #{item.payStatus,jdbcType=VARCHAR},
            #{item.deleted,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>
    <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
        insert into t_order (
        <foreach collection="selective" item="column" separator=",">
            ${column.escapedColumnName}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            <foreach collection="selective" item="column" separator=",">
                <if test="'order_code'.toString() == column.value">
                    #{item.orderCode,jdbcType=VARCHAR}
                </if>
                <if test="'user_id'.toString() == column.value">
                    #{item.userId,jdbcType=INTEGER}
                </if>
                <if test="'amount'.toString() == column.value">
                    #{item.amount,jdbcType=DECIMAL}
                </if>
                <if test="'pay_amount'.toString() == column.value">
                    #{item.payAmount,jdbcType=DECIMAL}
                </if>
                <if test="'recipient_name'.toString() == column.value">
                    #{item.recipientName,jdbcType=VARCHAR}
                </if>
                <if test="'recipient_mobile'.toString() == column.value">
                    #{item.recipientMobile,jdbcType=VARCHAR}
                </if>
                <if test="'recipient_address'.toString() == column.value">
                    #{item.recipientAddress,jdbcType=VARCHAR}
                </if>
                <if test="'status'.toString() == column.value">
                    #{item.status,jdbcType=VARCHAR}
                </if>
                <if test="'pay_status'.toString() == column.value">
                    #{item.payStatus,jdbcType=VARCHAR}
                </if>
                <if test="'deleted'.toString() == column.value">
                    #{item.deleted,jdbcType=VARCHAR}
                </if>
                <if test="'create_time'.toString() == column.value">
                    #{item.createTime,jdbcType=TIMESTAMP}
                </if>
                <if test="'update_time'.toString() == column.value">
                    #{item.updateTime,jdbcType=TIMESTAMP}
                </if>
            </foreach>
            )
        </foreach>
    </insert>
</mapper>