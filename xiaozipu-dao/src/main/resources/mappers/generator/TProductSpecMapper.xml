<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaozipu.dao.mapper.generator.TProductSpecMapper">
    <resultMap id="BaseResultMap" type="com.xiaozipu.dao.entity.generator.TProductSpec">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="product_id" jdbcType="INTEGER" property="productId"/>
        <result column="spec" jdbcType="VARCHAR" property="spec"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="cost_price" jdbcType="DECIMAL" property="costPrice"/>
        <result column="spec_image_url" jdbcType="VARCHAR" property="specImageUrl"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="deleted" jdbcType="VARCHAR" property="deleted"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, product_id, spec, price, cost_price, spec_image_url, stock, status, deleted, 
    create_time, update_time
  </sql>
    <select id="selectByExample" parameterType="com.xiaozipu.dao.entity.generator.TProductSpecExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from t_product_spec
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_product_spec
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_product_spec
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.xiaozipu.dao.entity.generator.TProductSpecExample">
        delete from t_product_spec
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xiaozipu.dao.entity.generator.TProductSpec">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_product_spec (name, product_id, spec,
        price, cost_price, spec_image_url,
        stock, status, deleted,
        create_time, update_time)
        values (#{name,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, #{spec,jdbcType=VARCHAR},
        #{price,jdbcType=DECIMAL}, #{costPrice,jdbcType=DECIMAL}, #{specImageUrl,jdbcType=VARCHAR},
        #{stock,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{deleted,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.xiaozipu.dao.entity.generator.TProductSpec">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_product_spec
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="spec != null">
                spec,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="costPrice != null">
                cost_price,
            </if>
            <if test="specImageUrl != null">
                spec_image_url,
            </if>
            <if test="stock != null">
                stock,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="spec != null">
                #{spec,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="costPrice != null">
                #{costPrice,jdbcType=DECIMAL},
            </if>
            <if test="specImageUrl != null">
                #{specImageUrl,jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                #{stock,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xiaozipu.dao.entity.generator.TProductSpecExample"
            resultType="java.lang.Long">
        select count(*) from t_product_spec
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_product_spec
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.productId != null">
                product_id = #{record.productId,jdbcType=INTEGER},
            </if>
            <if test="record.spec != null">
                spec = #{record.spec,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.costPrice != null">
                cost_price = #{record.costPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.specImageUrl != null">
                spec_image_url = #{record.specImageUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.stock != null">
                stock = #{record.stock,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
  </update>
  <update id="updateByExample" parameterType="map">
      update t_product_spec
      set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      spec = #{record.spec,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      cost_price = #{record.costPrice,jdbcType=DECIMAL},
      spec_image_url = #{record.specImageUrl,jdbcType=VARCHAR},
      stock = #{record.stock,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
      <if test="_parameter != null">
          <include refid="Update_By_Example_Where_Clause"/>
      </if>
  </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaozipu.dao.entity.generator.TProductSpec">
        update t_product_spec
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=INTEGER},
            </if>
            <if test="spec != null">
                spec = #{spec,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="costPrice != null">
                cost_price = #{costPrice,jdbcType=DECIMAL},
            </if>
            <if test="specImageUrl != null">
                spec_image_url = #{specImageUrl,jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                stock = #{stock,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaozipu.dao.entity.generator.TProductSpec">
    update t_product_spec
    set name = #{name,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      spec = #{spec,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      cost_price = #{costPrice,jdbcType=DECIMAL},
      spec_image_url = #{specImageUrl,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        insert into t_product_spec
        (name, product_id, spec, price, cost_price, spec_image_url, stock, status, deleted,
        create_time, update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.name,jdbcType=VARCHAR}, #{item.productId,jdbcType=INTEGER}, #{item.spec,jdbcType=VARCHAR},
            #{item.price,jdbcType=DECIMAL}, #{item.costPrice,jdbcType=DECIMAL}, #{item.specImageUrl,jdbcType=VARCHAR},
            #{item.stock,jdbcType=INTEGER}, #{item.status,jdbcType=VARCHAR}, #{item.deleted,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
      insert into t_product_spec (
      <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
      <foreach collection="list" item="item" separator=",">
          (
          <foreach collection="selective" item="column" separator=",">
              <if test="'name'.toString() == column.value">
                  #{item.name,jdbcType=VARCHAR}
              </if>
              <if test="'product_id'.toString() == column.value">
                  #{item.productId,jdbcType=INTEGER}
              </if>
              <if test="'spec'.toString() == column.value">
                  #{item.spec,jdbcType=VARCHAR}
              </if>
              <if test="'price'.toString() == column.value">
                  #{item.price,jdbcType=DECIMAL}
              </if>
              <if test="'cost_price'.toString() == column.value">
                  #{item.costPrice,jdbcType=DECIMAL}
              </if>
              <if test="'spec_image_url'.toString() == column.value">
                  #{item.specImageUrl,jdbcType=VARCHAR}
              </if>
              <if test="'stock'.toString() == column.value">
                  #{item.stock,jdbcType=INTEGER}
              </if>
              <if test="'status'.toString() == column.value">
                  #{item.status,jdbcType=VARCHAR}
              </if>
              <if test="'deleted'.toString() == column.value">
                  #{item.deleted,jdbcType=VARCHAR}
              </if>
              <if test="'create_time'.toString() == column.value">
                  #{item.createTime,jdbcType=TIMESTAMP}
              </if>
              <if test="'update_time'.toString() == column.value">
                  #{item.updateTime,jdbcType=TIMESTAMP}
              </if>
          </foreach>
          )
      </foreach>
  </insert>
</mapper>